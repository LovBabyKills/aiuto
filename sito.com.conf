<VirtualHost *:80>
    ServerName sito.com
    DocumentRoot /var/www/myapp/public
    
    <Directory /var/www/myapp/public>
        AllowOverride All
        Require all granted
        Options Indexes FollowSymLinks
    </Directory>
    
    ErrorLog /var/log/httpd/sito.com_error.log
    CustomLog /var/log/httpd/sito.com_access.log combined
</VirtualHost>

-------------------------------------------------------------
da metetre in docker-compose
- ./docker/sito.com.conf:/etc/httpd/conf.d/sito.com.conf

---------------------------------------------------------------
cambiare etc/host e metetre
127.0.0.1 sito.com

--------------------------------------------------------------

Nel tuo docker-compose.yml, quando specifichi ports: - "80:80", stai creando un mapping tra:

La porta 80 del tuo computer host (la prima cifra)
La porta 80 all'interno del container (la seconda cifra)


Questo mapping significa che tutte le richieste che arrivano alla porta 80 del tuo computer host (127.0.0.1:80) vengono inoltrate alla porta 80 del container Docker dove è in esecuzione Apache.
Quando modifichi il file /etc/hosts aggiungendo 127.0.0.1 sito.com, stai dicendo al tuo sistema che le richieste per "sito.com" devono essere indirizzate a 127.0.0.1 (localhost).
Quindi, quando navighi su http://sito.com nel browser:

Il browser vede "sito.com" e grazie al file hosts lo traduce in 127.0.0.1
La richiesta viene inviata a 127.0.0.1 sulla porta 80 (predefinita per HTTP)
Docker riceve questa richiesta sulla porta 80 del host e la inoltra alla porta 80 del container
Apache nel container riceve la richiesta, la elabora secondo la configurazione di VirtualHost per "sito.com" e serve l'applicazione Laravel



Se volessi usare una porta diversa, ad esempio la 8080, dovresti:

Modificare il mapping in docker-compose: ports: - "8080:80"
Accedere al sito tramite http://sito.com:8080

-------------------------------------------------------
No, non è necessario cambiare l'indirizzo 127.0.0.1 per un'altra applicazione. Puoi gestire più applicazioni in diversi modi:

Usando domini diversi: Puoi aggiungere più voci nel file /etc/hosts, tutte puntando a 127.0.0.1, ma con nomi diversi:
Copy127.0.0.1 sito.com
127.0.0.1 altraapp.com
127.0.0.1 terzaapp.test

Usando porte diverse: Puoi mantenere le tue app sulla stessa IP ma esporle su porte diverse:

Prima app: ports: - "80:80" (accessibile tramite http://sito.com)
Seconda app: ports: - "8080:80" (accessibile tramite http://altraapp.com:8080)
Terza app: ports: - "8081:80" (accessibile tramite http://terzaapp.test:8081)

-------------------------------------------------------------